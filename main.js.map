{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\n\r\n","// создаю карточку, делаю копию контейнера и присваиваю все нужные значения\r\nconst cardTemplate = document.querySelector(\"#card-template\").content; // переменная хранящая темплейт\r\n\r\n//функция удаления карточек\r\nexport function deleteCard(cardElement) {\r\n  cardElement.remove();\r\n}\r\n//функция для обработки лайка\r\nexport function likeCard(cardElement) {\r\n  cardElement.classList.toggle(\"card__like-button_is-active\"); // функция добавления лайка\r\n}\r\n\r\n// @todo: Функция создания карточки\r\nexport const createCard = (card, likeCard, deleteCard, wiewImage) => {\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true); //копия блока с его содержимым\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  cardImage.src = card.link; // ссылка на картинку\r\n  cardImage.alt = \"На картинке изображено: \" + card.name; // альт для каждой картинки\r\n  cardElement.querySelector(\".card__title\").textContent = card.name; // тайтл\r\n\r\n  // Обработчик клика для кнопки удаления\r\n  const buttonCardDelete = cardElement.querySelector(\".card__delete-button\"); // кнопка удаления\r\n  buttonCardDelete.addEventListener(\"click\", () => {\r\n    deleteCard(cardElement); // вызываем функцию удаления\r\n  });\r\n\r\n  const buttonLikeCard = cardElement.querySelector(\".card__like-button\");\r\n  buttonLikeCard.addEventListener(\"click\", (evt) => {\r\n    likeCard(evt.target);\r\n  });\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    wiewImage(card);\r\n  });\r\n\r\n  return cardElement; // возврат новых значений\r\n};\r\n","function closeByEscape(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    if (openedPopup) {\r\n      closePopup(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\nexport function openPopup(popup) {\r\n  popup.classList.add(\"popup_is-animated\");\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeByEscape);\r\n}\r\n\r\nexport function closePopup(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeByEscape);\r\n}\r\n\r\nexport function setPopupListeners() {\r\n  // Обработчик для закрытия попапа по клику на кнопку закрытия\r\n  document.querySelectorAll(\".popup\").forEach((popup) => {\r\n    const closeButton = popup.querySelector(\".popup__close\");\r\n    closeButton.addEventListener(\"click\", () => closePopup(popup));\r\n\r\n    // обработчик клика на оверлей\r\n    popup.addEventListener(\"click\", (evt) => {\r\n      // Проверяем, был ли клик по самому оверлею (внешнему контейнеру попапа)\r\n      if (evt.target === popup) {\r\n        closePopup(popup);\r\n      }\r\n    });\r\n  });\r\n}\r\n","import \"./pages/index.css\";\r\n\r\nimport { initialCards } from \"./scripts/cards\";\r\nimport { createCard, deleteCard, likeCard } from \"./scripts/card\";\r\n\r\nimport { openPopup, closePopup, setPopupListeners } from \"./scripts/modal\";\r\n\r\nconst container = document.querySelector(\".places__list\"); // место куда добавляем\r\nconst editButton = document.querySelector(\".profile__edit-button\"); // кнопка редактирования профиля\r\nconst popupEdit = document.querySelector(\".popup_type_edit\"); // попап редактирования профиля\r\nconst profileButton = document.querySelector(\".profile__add-button\"); // кнопка добавления новой карточки\r\n//форма карточек\r\nconst newCardsForm = document.forms.new_place;\r\nconst namePlace = newCardsForm.elements.place_name;\r\nconst linkCard = newCardsForm.elements.link;\r\n//форма профиля\r\nconst profileForm = document.forms.edit_profile;\r\nconst nameInput = profileForm.elements.name;\r\nconst jobInput = profileForm.elements.description;\r\n// профиль редактирования\r\nconst nameElement = document.querySelector(\".profile__title\");\r\nconst jobElement = document.querySelector(\".profile__description\");\r\nconst newCard = document.querySelector(\".popup_type_new-card\"); // попап добавления новой карточки\r\n//попап карточки\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst imagePopup = popupImage.querySelector(\".popup__image\");\r\nconst popupCartion = popupImage.querySelector(\".popup__caption\");\r\n\r\n// @todo: Вывести карточки на страницу\r\nconst addCard = (cardElement, container) => {\r\n  container.append(cardElement);\r\n};\r\n\r\n//функция чтобы пройтись по всему массиву\r\ninitialCards.forEach((card) => {\r\n  const newCard = createCard(card, likeCard, deleteCard, wiewImage); //переменная где лежит функция с карточкой\r\n  addCard(newCard, container); // вызов функции создании карточки, 1 арг- карточки, 2-куда\r\n});\r\n\r\nsetPopupListeners(); // вызов функции обработчика клика по оверлею и эскейп\r\n\r\nexport function wiewImage(cardImage) {\r\n  imagePopup.src = cardImage.link;\r\n  imagePopup.alt = cardImage.name;\r\n  popupCartion.textContent = cardImage.name;\r\n\r\n  openPopup(popupImage);\r\n}\r\n\r\nfunction fillFormWithProfileData() {\r\n  nameInput.value = nameElement.textContent; // Заполняем поле имени\r\n  jobInput.value = jobElement.textContent; // Заполняем поле описания\r\n}\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  fillFormWithProfileData(); //заполнение полей\r\n  openPopup(popupEdit);\r\n});\r\n\r\n// Обработчик «отправки» формы\r\nfunction handleProfileButton(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n\r\n  // Получите значение полей jobInput и nameInput из свойства value\r\n  const nameValue = nameInput.value;\r\n  const jobValue = jobInput.value;\r\n\r\n  // Вставьте новые значения с помощью textContent\r\n  nameElement.textContent = nameValue;\r\n  jobElement.textContent = jobValue;\r\n\r\n  closePopup(popupEdit);\r\n}\r\n\r\n// Прикрепляем обработчик к форме:\r\n// он будет следить за событием “submit” - «отправка»\r\nprofileForm.addEventListener(\"submit\", handleProfileButton);\r\n\r\nprofileButton.addEventListener(\"click\", () => openPopup(newCard));\r\n\r\n// Обработчик «отправки» формы\r\nfunction handleCardSubmit(\r\n  evt,\r\n  newCardsForm,\r\n  container,\r\n  createCard,\r\n  deleteCard,\r\n  wiewImage,\r\n  likeCard\r\n) {\r\n  evt.preventDefault(); //сброс дефолтных настроек\r\n\r\n  // Создание новой карточки\r\n  const newCardData = {\r\n    name: namePlace.value,\r\n    link: linkCard.value,\r\n  };\r\n\r\n  const newCards = createCard(newCardData, likeCard, deleteCard, wiewImage);\r\n\r\n  //добавление в начало контейнера\r\n  container.prepend(newCards);\r\n\r\n  // закрытие попапа\r\n  closePopup(newCard);\r\n\r\n  // Сброс формы\r\n  newCardsForm.reset();\r\n}\r\n\r\n// Добавляем обработчик события submit и передаем необходимые аргументы\r\nnewCardsForm.addEventListener(\"submit\", (evt) =>\r\n  handleCardSubmit(\r\n    evt,\r\n    newCardsForm,\r\n    container,\r\n    createCard,\r\n    deleteCard,\r\n    wiewImage,\r\n    likeCard\r\n  )\r\n);\r\n"],"names":["cardTemplate","document","querySelector","content","deleteCard","cardElement","remove","likeCard","classList","toggle","createCard","card","wiewImage","cloneNode","cardImage","src","link","alt","name","textContent","addEventListener","evt","target","closeByEscape","key","openedPopup","closePopup","openPopup","popup","add","removeEventListener","container","editButton","popupEdit","profileButton","newCardsForm","forms","new_place","namePlace","elements","place_name","linkCard","profileForm","edit_profile","nameInput","jobInput","description","nameElement","jobElement","newCard","popupImage","imagePopup","popupCartion","forEach","append","addCard","querySelectorAll","value","preventDefault","nameValue","jobValue","newCards","prepend","reset","handleCardSubmit"],"sourceRoot":""}